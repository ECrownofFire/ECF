{% extends "ecf_base.dtl" %}
{# vim: set ft=htmldjango: #}
{% block content %}
{% if not user %}
<main id="login">
<script>
var onloadCallback = function() { return true; };
function verify_login() {
    var xhr = new XMLHttpRequest();
    xhr.responseType = "json";
    xhr.open("POST", "{{ base_url }}/login");
    xhr.onload = function(e) {
        if (xhr.status === 200) {
            window.location.href = xhr.response.newLocation;
        } else if(xhr.status === 400) {
            if (xhr.response.result == "failed") {
                var M = document.getElementById('message');
                M.innerHTML = xhr.response.text;
                document.getElementById('form-login').reset();
                if (document.getElementById('recaptcha') !== null) {
                    grecaptcha.reset();
                }
            } else if(xhr.response.result == "captcha") {
                var M = document.getElementById('message');
                M.innerHTML = xhr.response.text;
                var div = document.getElementById('recaptcha');
                if (div === null) {
                    div = document.createElement('div');
                    div.id = "recaptcha";
                    document.getElementById('form-login').appendChild(div);
                    grecaptcha.render(div, {'sitekey' : '{{ recaptcha_key }}'});
                } else {
                    grecaptcha.reset();
                }
            }
        }
    }
    var data = construct_request();
    xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
    xhr.send(data);
    return false;
};
function construct_request() {
    var email = document.getElementById('email').value;
    var pass = document.getElementById('password').value;
    var str = "email=" + email + "&password=" + pass;
    var captcha = document.getElementById('recaptcha');
    if (captcha === null) {
        return str;
    } else {
        return str + "&g-recaptcha-response=" + grecaptcha.getResponse();
    }
};
</script>
<script src='https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit' async defer></script>
<h2>Login</h2>
<p id="message">{{ message }}</p>
<form id="form-login" action="{{ base_url }}/login?url={{ url }}" method="post" onsubmit="return verify_login()">
    <label>Email: <input id="email" type="text" autocomplete="email" name="email" required></label>
    <label>Password: <input id="password" type="password" autocomplete="current-password" name="password" required></label>
    <input id="submit-login" type="submit" value="Login">
</form>
{% else %}
<main id="alread-logged-in">
    <p>{{ message }}</p>
    <script language="javascript" type="text/javascript">
        window.setTimeout(function() { location.href = "{{ base_url }}/{{ url }}";}, 2000);
    </script>
{% endif %}
</main>
{% endblock %}
